1. Escreva um código em C que pisca os LEDs ininterruptamente.
#include <msp430.h> 
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (LED1|LED2)
#define BTN BIT3

void atraso(volatile unsigned int i)
{
    while ((i--)>0);
}

int main(void) {
    WDTCTL = WDTPW | WDTHOLD;	// Stop watchdog timer
	P1OUT |= LEDS;
	P1DIR |= LEDS;
	while(1)
	{
	    atraso(0xffff);
	    P1OUT ^= LEDS;
	}
	return 0;
}

2. Escreva um código em C que pisca os LEDs ininterruptamente. No ciclo que pisca os LEDs, o tempo que os LEDs ficam ligados deve ser duas vezes maior do que o tempo que eles ficam desligados.

3. Escreva um código em C que acende os LEDs quando o botão é pressionado.
#include <msp430.h> 

int main(void) {
    WDTCTL = WDTPW | WDTHOLD;                                                // Desligar WatchDog Timer
        P1OUT = 0x00;
        P1DIR |= 0xFF;                                              //Sempre devemos colocar os pinos não utilizados em modo de saída
        P1DIR &= ~BIT3;                                             //depois apagamos os pinos que serão utilizados como entrada
        P1REN |= BIT3;                                              //Ligar o resistor conectado ao pino 3.
        P1OUT |= BIT3;                                              // O Registrador PxOUT pode ser mudado independente da direção de PxDIR


        for(;;){
            if((P1IN & BIT3) == 0)
                 P1OUT ^= BIT0;
        }
	return 0;
}


4. Escreva um código em C que pisca os LEDs ininterruptamente somente se o botão for pressionado.
#include <msp430.h> 
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (LED1|LED2)
#define BTN BIT3


int main(void) {
    WDTCTL = WDTPW | WDTHOLD;   // Stop watchdog timer
    P1OUT |= LEDS;
    P1DIR |= LEDS;
    P1DIR &= ~BTN;
    P1REN |= BTN;
    P1OUT |= BTN;
    while(1)
    {
       if((P1IN&BTN)==0)
           P1OUT |= LEDS;
       else
           P1OUT &= ~LEDS;

    }
    return 0;
}

5. Escreva um código em C que acende os LEDs quando o botão é pressionado. Deixe o MSP430 em modo de baixo consumo, e habilite a interrupção do botão.
